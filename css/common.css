*,
::after,
::before {
  box-sizing: border-box;
}

body {
  font-family: "Quicksand", sans-serif;
  font-size: 20px;
  margin: 0;
  padding: 0;
  background-color: #f0f0f0;
  background-image: url(../images/tunnel.png);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  color: #fff;
  /* 
    set display to flex so we can grow our main content and keep our footer "sticky".
    This strategy was based on chat interaction with ChatGPT 4.0 on Dec 18.
    Prompt:
      how can I make my footer stick to the bottom of the page if the page
      content is short, but keep the footer below all content when the page is
      long, even if I have to scroll to see the footer?
    Response Explanation:
      - The body is set to a flex container with a vertical direction.
      - The .content-wrap is given flex: 1, which allows it to grow and take up
        any available space, pushing the footer down.
      - The .footer will stick to the bottom when the content is short because of
        the min-height: 100vh on the body, making sure the body takes at least 100%
        of the viewport height.
      - On longer pages, the content will naturally push the footer down, and it
        will no longer stick to the bottom of the viewport but will be at the end
        of the content as usual.
      This solution is widely supported across modern browsers and provides a
      clean way to have a footer behave dynamically based on the length of the
      content.

    This was then adapted to fit our elements (ie main instead of .content-wrap)
  */
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

main {
  /* allow content to grow to take up available space. */
  flex: 1;
  /* leave enough margin for the header, which is fixed in place */
  margin-top: 140px;
}

header {
  background-color: rgb(5 46 103);
  color: white;
  padding: 10px 0 0;
  z-index: 1;
  /* fix the top header in place so it is always visible on screen */
  position: fixed;
  width: 100%;
}

nav ul {
  list-style-type: none;
  text-align: center;
  margin: 0px;
}

nav ul li {
  display: inline-block;
  margin-right: 20px;
}

nav ul li a {
  color: white;
  text-decoration: none;
  font-weight: bold;
  font-size: 28px;
  position: relative;
  padding-bottom: 10px;
  vertical-align: middle;
}

/* Add an underline effect to the nav links, which is normally hidden (with
   transform: scaleX(0)) but grows to the width of the link when hovered */
nav ul li a::after {
  content: "";
  background-color: #35e2f6;
  height: 10px;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  text-decoration: underline;
  /* hide this effect under normal circumstances */
  -webkit-transform: scaleX(0);
  -webkit-transform-origin: bottom center;
  -moz-transform: scaleX(0);
  -moz-transform-origin: bottom center;
  transform: scaleX(0);
  transform-origin: bottom center;
  /* animate the transition */
  transition: transform 0.2s ease-out;
}
nav ul li a:hover::after {
  /* on hover grow the underline effect to the width of the link */
  -webkit-transform: scaleX(1);
  -moz-transform: scaleX(1);
  transform: scaleX(1);
}

/* target all nav li except the last and add a pillar icon after it to divide the
   nav links */
nav ul li::after {
  content: "";
  height: 50px;
  width: 30px;
  /* pillar icon from https://thehungryjpeg.com/product/3905941-ancient-classic-pillars-greek-and-roman-architecture-pillars-histori */
  background-image: url(/images/pillar.png);
  background-position: right;
  background-size: contain;
  background-repeat: no-repeat;
  display: inline-block;
  vertical-align: middle;
}
nav ul li:last-of-type::after {
  background: none;
}
@media (max-width: 992px) {
  nav ul li a {
    font-size: 20px;
  }
  nav ul li {
    display: block;
    width: 100%;
    height: 30px;
    border: none !important;
  }

  nav ul li::after {
    background: none;
  }
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #6690ab;
  min-width: 300px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.dropdown-content a {
  color: black;
  font-size: 20px;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: center;
}

.dropdown-content a:hover {
  background-color: #f1f1f1;
}

.dropdown:hover .dropdown-content {
  display: block;
}

section {
  padding: 20px;
  text-align: center;
  background-color: rgba(5, 49, 107, 0.7);
  margin: 20px 0px;
  border-radius: 20px;
}

footer {
  background-color: #333;
  color: white;
  text-align: center;
  padding: 10px 0;
  bottom: 0;
  width: 100%;
  margin-top: 30px;
}

/* restrict the images to the width of their container */
img {
  max-width: 100%;
  border-radius: 6px;
  display: block;
}

span.star::before {
  content: "\2605";
  font-size: 36px;
  width: 50px;
  height: 50px;
  display: inline-block;
  color: #ffd624;
}

.social-links a {
  color: #fff;
  text-decoration: none;
  font-size: 32px;
  display: inline-block;
  margin: 0px 3px;
}

.margin-auto {
  margin: auto;
}
.mt-1 {
  margin-top: 10px;
}
.mt-2 {
  margin-top: 20px;
}
.mt-3 {
  margin-top: 30px;
}
.mt-4 {
  margin-top: 40px;
}
.mt-5 {
  margin-top: 50px;
}

.inline-block {
  display: inline-block;
}

.trident-divider {
  display: flex;
  flex-direction: row;
  width: 80%;
  margin: auto;
}
/* a class that will cause an element to be displayed flipped (mirror image) */
.flipped {
  -moz-transform: scaleX(-1);
  -webkit-transform: scaleX(-1);
  transform: scaleX(-1);
}
.trident {
  display: inline-block;
  height: 115px;
}
/*
  Trident vector image obtained from Vecteezy (https://www.vecteezy.com/vector-art/3381271-trident-vector-logo-icon-illustration-sign-symbol),
  then split into 3 files to allow its size to dynamically adapt to its container
  by growing the middle part using flex: 1, while keeping the left and right
  sides at their same size  
*/
.trident-left {
  background-image: url(/images/trident-left-01.svg);
  background-repeat: no-repeat;
  width: 82px;
}
.trident-middle {
  background-image: url(/images/trident-middle-01.svg);
  /* don't se a width on this element, instead allow it to grow to fill the
     available space */
  flex: 1;
  /* repeat the background on the x axis so we can tile the middle section of
     the trident regardless of how big the container is */
  background-repeat: repeat-x;
}
.trident-right {
  background-image: url(/images/trident-right-01.svg);
  background-repeat: no-repeat;
  width: 199px;
}

.logo-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  border-bottom: 1px solid #fff;
  padding-bottom: 10px;
}

.logo {
  width: 50px;
  margin: 0px 20px 0px 20px;
}

.park-name {
  font-size: 50px;
  font-weight: 600;
  color: #fff;
}

/* container for the overlap spans which cover the bottom 48px of this container
   with a semi-transparent bg and some text*/
.overlay-img {
  position: relative;
  display: inline-block;
}
.row > .overlay-img {
  padding: 0px;
}
/* This span containing the overlaid text, absolutely positioned to the bottom
   of the container */
span.overlay,
figcaption.overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background-color: #08244fa3;
  border-radius: 0px 0px 6px 6px;
  font-size: 48px;
}

.btn,
.btn-medium {
  display: block;
  cursor: pointer;
  width: 100%;
  max-width: 400px;
  height: 48px;
  font-size: 32px;
  line-height: 48px;
  text-decoration: none;
  color: #fff;
  background-color: rgb(47 163 77 / 53%);
  border-radius: 6px;
  transition: transform 0.3s ease-in-out, background-color 0.2s ease-in-out !important;
}
.w-100 {
  width: 100%;
  max-width: 100%;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.btn-medium {
  height: 28px;
  font-size: 26px;
  line-height: 28px;
}

.btn:hover,
.btn-medium:hover {
  background-color: rgb(47 163 77 / 100%);
}

#popular_rides img {
  width: 100%;
}
#popular_rides .ride:hover img {
  filter: brightness(1.25);
}

/* a review from a guest, intended to take up full container width */
.review {
  background-color: #051a2f;
  padding: 20px 20px 0px 20px;
  margin: 10px 0px;
  border-radius: 6px;
}
.review h4 {
  background-color: #185671;
  padding: 12px 0px;
  border-radius: 6px;
}

select,
input[type="text"],
input[type="tel"],
input[type="email"] {
  height: 40px;
  border: none;
  border-radius: 6px;
  font-size: 18px;
  padding: 0 5px;
}
input[type="submit"] {
  border: none;
}

#events img {
  cursor: pointer;
  transform: scale(1);
  transition: transform 0.3s ease-in-out;
}
#events img:hover {
  transform: scale(1.05);
}

#registrationForm label {
  text-align: right;
  line-height: 40px;
}
/* These styles are rougly taken from Bootstrap v5, but are modified to make
   the container a bit wider than bootstrap normally uses */
.container,
.container-fluid {
  width: 100%;
  padding-right: 10px;
  padding-left: 10px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
    padding-right: 20px;
    padding-left: 20px;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 720px;
    padding-right: 50px;
    padding-left: 50px;
  }
}
@media (min-width: 992px) {
  .container {
    max-width: 960px;
    padding-right: 40px;
    padding-left: 40px;
  }
}
@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
    padding-right: 50px;
    padding-left: 50px;
  }
}
@media (min-width: 1400px) {
  .container {
    max-width: 1320px;
  }
}

:root {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
}
.row {
  display: flex;
  flex-wrap: wrap;
}
.row > * {
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-top: var(--bs-gutter-y);
}

.row .col-1-3 {
  width: 33.3%;
}

.row .col-2-3 {
  width: 66.6%;
}

.row .col-1-2 {
  width: 50%;
}

.row .col-1-4 {
  width: 25%;
}

.row .col-3-4 {
  width: 75%;
}

/* 
GRID LAYOUT:
This system creates a grid layout using the display: grid style on the parent
container.  The number of columns is dictated by the grid-template-columns rule.
a parent element should have the "grid" class applied, and may specify "grid-1"
through "grid-5" to create a grid of that many columns.  grid size can be changed
for smaller screen sizes using the grid-sm-* and grid-md-* classes, which set the
grid to use that number of columns when being displayed on a small or medium
screen.  child elements can be configured to span multiple columns using the
grid-span-* classes (e.g. grid-span-2 will span 2 columns.
*/
.grid {
  display: grid;
  grid-gap: 1rem;
}
.grid-1 {
  grid-template-columns: repeat(1, 1fr);
}
.grid-2 {
  grid-template-columns: repeat(2, 1fr);
}
.grid-3 {
  grid-template-columns: repeat(3, 1fr);
}
.grid-4 {
  grid-template-columns: repeat(4, 1fr);
}
.grid-5 {
  grid-template-columns: repeat(5, 1fr);
}

@media (max-width: 500px) {
  .grid-sm-1 {
    grid-template-columns: repeat(1, 1fr);
  }
  .grid-sm-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .grid-sm-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid-sm-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .grid-sm-5 {
    grid-template-columns: repeat(5, 1fr);
  }
}

@media (min-width: 500px) and (max-width: 1000px) {
  .grid-md-1 {
    grid-template-columns: repeat(1, 1fr);
  }
  .grid-md-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .grid-md-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid-md-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .grid-md-5 {
    grid-template-columns: repeat(5, 1fr);
  }
}

.grid-span-2 {
  grid-column: span 2;
}
.grid-span-3 {
  grid-column: span 3;
}
.grid-span-4 {
  grid-column: span 4;
}
.grid-span-5 {
  grid-column: span 5;
}

/* Font Awesome v5 free brand icons - used for facebook/instagram/twitter/youtube footer icons */
.fab,
.fa-brands {
  font-family: var(--fa-style-family-brands);
}
.fa,
.fa-brands,
.fa-classic,
.fa-duotone,
.fa-light,
.fa-regular,
.fa-sharp,
.fa-sharp-solid,
.fa-solid,
.fa-thin,
.fab,
.fad,
.fal,
.far,
.fas,
.fasl,
.fasr,
.fass,
.fast,
.fat {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: var(--fa-display, inline-block);
  font-style: normal;
  font-variant: normal;
  line-height: 1;
  text-rendering: auto;
}


/* modal CSS */

.modal-info {
  color: #fff;
}

.modal {
  /* initially the modal element is hidden, but the show JS class is added on button click */
  display: none;
}
/* make the backdrop visible when it has the "show" class */
.modal.show {
  display: unset;
}
/* make the background opaque when modal is opened */
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5); /* semi-transparent black */
  opacity: 0;
  backdrop-filter: blur(0px); /* blur will be added when container has show class */
  transition: backdrop-filter 2s ease-in-out, opacity 2s ease-in-out !important; /* gradually blur backdrop */
  z-index: 10; /* Ensure it's above other content */
}
.modal.show .modal-backdrop {
  backdrop-filter: blur(10px); /* Blurs the content behind the backdrop */
  opacity: 1;
}

/* The modal content */
.modal-content {
  /* set to z-index to a higher value so it covers all the other elements */
  z-index: 20;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  text-align: start;
  /* position the element relative to the viewport, so it stays in place when scrolling */
  position: fixed;
  /* move the element 50% from the top and left sides of the screen */
  top: 50%;
  left: 50%;
  /* move the element based on its size in order to center it */
  transform: translate(-50%, -50%);
  padding: 20px;
  border-radius: 6px;
  width: 50%;
  min-height: 20%;
  max-height: 90%;
  background: rgba(5, 49, 107, 0.7);
  overflow-y: auto;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}
.close-btn {
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  width: 70px;
  height: 60px;
  line-height: 60px;
  text-align: center;
}
.close-btn:hover {
  text-decoration: underline;
}

/* change the styling if the screen is smaller than 768px */
@media (max-width: 768px) {
  .modal {
    padding: 10px;
  }
  .modal-info,
  .close-btn {
    font-size: 15px;
  }
}

/* Olympus font obtained from https://www.fontspace.com/olympus-font-f11234
   and converted to woff format using https://transfonter.org/ */
@font-face {
  font-family: "Olympus";
  src: url("/fonts/Olympus.woff2") format("woff2"),
    url("/fonts/Olympus.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Olympus";
  src: url("/fonts/OlympusBold.woff2") format("woff2"),
    url("/fonts/OlympusBold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}

h1 {
  font-size: 48px;
}
h2 {
  font-size: 32px;
}
h1,
h2,
h3,
h4,
h5,
h6,
a,
button,
.btn,
.overlay,
.park-name {
  font-family: "Olympus";
  font-weight: normal;
  font-style: normal;
}

a {
  color: #FFF;
}

a.btn.price {
  font-family: "Quicksand", sans-serif;
}

.center-align {
  text-align: center;
}


input[type="number"] {
  width: 100%; /* Full width of container */
  padding: 10px 30px 10px 15px; /* leave room for spinners in right padding */
  box-sizing: border-box; /* Include padding and border in the element's width and height */
  border-radius: 6px;
  font-size: 16px;
  background-color: white;
}

/* hide the browser's default spinner buttons so we can replace them with our own */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* limit the width of the number input container */
.number-input-container {
  position: relative;
  width: 70px;
}

/* The custom spinner buttos we use to add/subtract from the input's value */
.spinner-button {
  color: #FFF;
  border: 1px solid #000;
  position: absolute;
  right: 0px;
  width: 22px;
  height: 22px;
  line-height: 18px;
  text-align: center;
  cursor: pointer;
  user-select: none; /* prevent user from selecting this text by accident */
  font-size: 26px;
  border-radius: 5px;
  background-color: #052e679e;
}
.spinner-button:hover {
  background-color: #264b7e;
}
.spinner-button.up {
  top: 0px;
  border-radius: 0px 5px 0px 0px; /* round the upper right corner */
}
.spinner-button.down {
  bottom: 0px;
  border-radius: 0px 0px 5px 0px; /* round the lower right corner */
}
